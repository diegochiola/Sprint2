-- MySQL Script generated by MySQL Workbench
-- Tue Jan 23 22:04:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pizzeria` DEFAULT CHARACTER SET utf8 ;
USE `pizzeria` ;

-- -----------------------------------------------------
-- Table `pizzeria`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(255) NOT NULL,
  `codigo_postal` VARCHAR(10) NOT NULL,
  `localidad` VARCHAR(45) NOT NULL,
  `provincia` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`tienda` (
  `id_tienda` INT NOT NULL AUTO_INCREMENT,
  `direccion` VARCHAR(255) NOT NULL,
  `codigo_postal` VARCHAR(10) NOT NULL,
  `localidad` VARCHAR(255) NOT NULL,
  `provincia` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_tienda`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`empleado` (
  `id_empleado` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NOT NULL,
  `nif` VARCHAR(10) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `tipo` ENUM('cocinero', 'repartidor') NOT NULL,
  `id_tienda` INT NOT NULL,
  PRIMARY KEY (`id_empleado`),
  INDEX `fk_empleado_tienda_idx` (`id_tienda` ASC),
  CONSTRAINT `fk_empleado_tienda`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `pizzeria`.`tienda` (`id_tienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` TEXT(500) NOT NULL,
  `imagen` BLOB NOT NULL,
  `precio` FLOAT NOT NULL,
  `id_categoria` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_categoria_idx` (`id_categoria` ASC),
  CONSTRAINT `fk_producto_categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `pizzeria`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pizza` (
  `id_pizza` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `id_categoria` INT NOT NULL,
  PRIMARY KEY (`id_pizza`),
  INDEX `fk_pizza_categoria_idx` (`id_categoria` ASC),
  CONSTRAINT `fk_pizza_categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `pizzeria`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `tipo_entrega` ENUM('a domicilio', 'recogida en tienda') NOT NULL,
  `cantidad_producto` INT NOT NULL,
  `precio` FLOAT NOT NULL,
  `id_cliente` INT NOT NULL,
  `id_tienda` INT NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_pedido_cliente_idx` (`id_cliente` ASC),
  INDEX `fk_pedido_tienda_idx` (`id_tienda` ASC),
  CONSTRAINT `fk_pedido_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `pizzeria`.`cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_tienda`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `pizzeria`.`tienda` (`id_tienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`entrega` (
  `id_entrega` INT NOT NULL AUTO_INCREMENT,
  `fecha_hora_entrega` DATETIME NOT NULL,
  `id_empleado` INT NOT NULL,
  `id_pedido` INT NOT NULL,
  PRIMARY KEY (`id_entrega`),
  INDEX `fk_entrega_empleado_idx` (`id_empleado` ASC) ,
  INDEX `fk_entrega_pedido_idx` (`id_pedido` ASC),
  CONSTRAINT `fk_entrega_empleado`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `pizzeria`.`empleado` (`id_empleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrega_pedido`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `pizzeria`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`detalle_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`detalle_pedido` (
  `id_pedido` INT NOT NULL,
  `id_producto` INT NOT NULL,
  `cantidad_producto` INT NOT NULL,
  PRIMARY KEY (`id_pedido`, `id_producto`),
  INDEX `fk_pedido_has_producto_producto1_idx` (`id_producto` ASC) ,
  INDEX `fk_pedido_has_producto_pedido1_idx` (`id_pedido` ASC),
  CONSTRAINT `fk_pedido__pedido`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `pizzeria`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_producto`
    FOREIGN KEY (`id_producto`)
    REFERENCES `pizzeria`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- Insertar datos a tablas

-- Insertar datos en la tabla `categoria`
INSERT INTO `pizzeria`.`categoria` (`nombre`) VALUES('Pizzas'),('Bebidas'),('Otros');
-- Insertar datos en la tabla producto
INSERT INTO `pizzeria`.`producto` (`nombre`, `descripcion`, `imagen`, `precio`, `id_categoria`) VALUES('Pizza Margherita', 'Tomate, burrata y albahaca', 'imagen_pizza_margherita.jpg', 8.99, 1),('Coca-Cola', 'Refresco de cola', 'imagen_cocacola.jpg', 1.50, 2),('Ensalada Rusa', 'Papa, atun, zanahoria y huevo', 'imagen_ensalada_rusa.jpg', 5.99, 3);
-- Insertar datos en la tabla `cliente`
INSERT INTO `pizzeria`.`cliente` (`nombre`, `apellido1`, `apellido2`, `direccion`, `codigo_postal`, `localidad`, `provincia`, `telefono`) VALUES ('Juan', 'Gómez', 'Pérez', 'Calle Principal 123', '08001', 'Barcelona', 'Barcelona', '612345678'),('Ana', 'Martínez', 'López', 'Avenida Central 456', '08002', 'Barcelona', 'Barcelona', '622345689');
-- Insertar datos en la tabla `tienda`
INSERT INTO `pizzeria`.`tienda` (`direccion`, `codigo_postal`, `localidad`, `provincia`) VALUES ('Calle Arago 112', '08003', 'Barcelona', 'Barcelona'), ('Sepulveda 101', '08004', 'Barcelona', 'Barcelona');
-- Insertar datos en la tabla `empleado`
INSERT INTO `pizzeria`.`empleado` (`nombre`, `apellido1`, `apellido2`, `nif`, `telefono`, `id_tienda`, `tipo`) VALUES ('Carlos', 'González', 'López', '12345678Z', '632345678', 1, 'cocinero'),('Elena', 'Sánchez', 'Martínez', '87654321X', '642345689', 2, 'repartidor');
-- Insertar datos en la tabla `entrega`
INSERT INTO `pizzeria`.`entrega` (`fecha_hora_entrega`, `id_empleado`, `id_pedido`) VALUES ('2024-01-23 12:30:00', 2, 1), ('2024-01-24 19:00:00', 1, 2);
-- Insertar datos en la tabla `pedido`
INSERT INTO `pizzeria`.`pedido` (`id_pedido`, `fecha`, `tipo_entrega`, `cantidad_producto`, `precio`, `id_cliente`, `id_tienda`) VALUES(1, '2024-01-23 12:00:00', 'a domicilio', 2, 15.98, 1, 1),(2, '2024-01-24 18:30:00', 'recogida en tienda', 1, 5.99, 2, 2);
-- Insertar datos en la tabla `detalle_pedido`
INSERT INTO `pizzeria`.`detalle_pedido` (`id_pedido`, `id_producto`, `cantidad_producto`) VALUES(1, 1, 1), (1, 2, 1), (2, 3, 1);

-- REQUISITOS
-- Llista quants productes de tipus “Begudes” s'han venut en una determinada localitat.
SELECT COUNT(dp.id_producto) AS bebidas_vendidas, t.localidad FROM detalle_pedido dp JOIN producto p ON dp.id_producto = p.id_producto JOIN categoria c ON p.id_categoria = c.id_categoria JOIN pedido pe ON dp.id_pedido = pe.id_pedido JOIN tienda t ON pe.id_tienda = t.id_tienda WHERE c.nombre = 'Bebidas' AND t.localidad = 'Barcelona';
-- Llista quantes comandes ha efectuat un determinat empleat/da.
SELECT e.nombre, e.apellido1, COUNT(entrega.id_pedido) AS comandas_realizadas FROM entrega JOIN empleado e ON entrega.id_empleado = e.id_empleado WHERE e.id_empleado = '1' GROUP BY e.id_empleado;
