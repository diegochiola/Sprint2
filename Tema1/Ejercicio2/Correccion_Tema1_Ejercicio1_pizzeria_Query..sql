-- MySQL Script generated by MySQL Workbench
-- Tue Jan 23 22:04:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pizzeria` DEFAULT CHARACTER SET utf8 ;
USE `pizzeria` ;

-- -----------------------------------------------------
-- Table `pizzeria`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(255) NOT NULL,
  `codigo_postal` VARCHAR(10) NOT NULL,
  `ciudad` VARCHAR(45) NOT NULL,
  `provincia` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`tienda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `direccion` VARCHAR(255) NOT NULL,
  `codigo_postal` VARCHAR(10) NOT NULL,
  `ciudad` VARCHAR(255) NOT NULL,
  `provincia` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`empleado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NOT NULL,
  `nif` VARCHAR(10) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `tipo` ENUM('cocinero', 'repartidor') NOT NULL,
  `tienda_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_empleado_tienda_idx` (`tienda_id` ASC),
  CONSTRAINT `fk_empleado_tienda`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `pizzeria`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`categoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` TEXT(500) NOT NULL,
  `imagen` BLOB NULL,
  `precio` FLOAT NOT NULL,
  `tipo` ENUM('pizza', 'hamburguesa', 'bebida') NOT NULL,
  `categoria_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_producto_categoria_idx` (`categoria_id` ASC),
  CONSTRAINT `fk_producto_categoria`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `pizzeria`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pizza` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `categoria_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pizza_categoria_idx` (`categoria_id` ASC),
  CONSTRAINT `fk_pizza_categoria`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `pizzeria`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`pedido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `tipo_entrega` ENUM('a domicilio', 'recogida en tienda') NOT NULL,
  `cantidad_producto` INT NOT NULL,
  `precio` FLOAT NOT NULL,
  `cliente_id` INT NOT NULL,
  `tienda_id` INT NOT NULL,
  `entrega_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pedido_cliente_idx` (`cliente_id` ASC),
  INDEX `fk_pedido_tienda_idx` (`tienda_id` ASC),
  CONSTRAINT `fk_pedido_cliente`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `pizzeria`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_tienda`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `pizzeria`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrega_id`
    FOREIGN KEY (`entrega_id`)
    REFERENCES `entrega` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`entrega` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha_hora_entrega` DATETIME NOT NULL,
  `empleado_id` INT NOT NULL,
  `pedido_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_entrega_empleado_idx` (`empleado_id` ASC),
  INDEX `fk_entrega_pedido_idx` (`pedido_id` ASC),
  CONSTRAINT `fk_entrega_empleado`
    FOREIGN KEY (`empleado_id`)
    REFERENCES `pizzeria`.`empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrega_pedido`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `pizzeria`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`detalle_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pizzeria`.`detalle_pedido` (
  `pedido_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  `cantidad_producto` INT NOT NULL,
  PRIMARY KEY (`pedido_id`, `producto_id`),
  INDEX `fk_pedido_has_producto_producto1_idx` (`producto_id` ASC),
  INDEX `fk_pedido_has_producto_pedido1_idx` (`pedido_id` ASC),
  CONSTRAINT `fk_detalle_pedido_pedido`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `pizzeria`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_pedido_producto`
    FOREIGN KEY (`producto_id`)
    REFERENCES `pizzeria`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- Insertar datos a tablas

-- Insertar datos en la tabla `categoria`
INSERT INTO `pizzeria`.`categoria` (`nombre`) VALUES('Pizzas'),('Bebidas'),('Otros');

-- Insertar datos en la tabla `producto`
INSERT INTO `pizzeria`.`producto` (`nombre`, `descripcion`, `imagen`, `precio`, `categoria_id`) VALUES ('Pizza Margherita', 'Tomate, burrata y albahaca', 'imagen_pizza_margherita.jpg', 8.99, 1), ('Coca-Cola', 'Refresco de cola', 'imagen_cocacola.jpg', 1.50, 2), ('Ensalada Rusa', 'Papa, atun, zanahoria y huevo', 'imagen_ensalada_rusa.jpg', 5.99, 3);

-- Insertar datos en la tabla `cliente`
INSERT INTO `pizzeria`.`cliente` (`nombre`, `apellido1`, `apellido2`, `direccion`, `codigo_postal`, `ciudad`, `provincia`, `telefono`) VALUES ('Juan', 'Gómez', 'Pérez', 'Calle Principal 123', '08001', 'Barcelona', 'Barcelona', '612345678'), ('Ana', 'Martínez', 'López', 'Avenida Central 456', '08002', 'Barcelona', 'Barcelona', '622345689');

-- Insertar datos en la tabla `tienda`
INSERT INTO `pizzeria`.`tienda` (`direccion`, `codigo_postal`, `ciudad`, `provincia`) VALUES ('Calle Arago 112', '08003', 'Barcelona', 'Barcelona'), ('Sepulveda 101', '08004', 'Barcelona', 'Barcelona');

-- Insertar datos en la tabla `empleado`
INSERT INTO `pizzeria`.`empleado` (`nombre`, `apellido1`, `apellido2`, `nif`, `telefono`, `tienda_id`, `tipo`) VALUES ('Carlos', 'González', 'López', '12345678Z', '632345678', 1, 'cocinero'), ('Elena', 'Sánchez', 'Martínez', '87654321X', '642345689', 2, 'repartidor');

-- Insertar datos en la tabla `pedido`
INSERT INTO `pizzeria`.`pedido` (`fecha`, `tipo_entrega`, `cantidad_producto`, `precio`, `cliente_id`, `tienda_id`) VALUES ('2024-01-23 12:00:00', 'a domicilio', 2, 15.98, 1, 1), ('2024-01-24 18:30:00', 'recogida en tienda', 1, 5.99, 2, 2);

-- Insertar datos en la tabla `entrega`
INSERT INTO `pizzeria`.`entrega` (`fecha_hora_entrega`, `empleado_id`, `pedido_id`) VALUES ('2024-01-23 12:30:00', 2, 1), ('2024-01-24 19:00:00', 1, 2);

-- Insertar datos en la tabla `detalle_pedido`
INSERT INTO `pizzeria`.`detalle_pedido` (`pedido_id`, `producto_id`, `cantidad_producto`) VALUES(1, 1, 1), (1, 2, 1), (2, 3, 1);

-- REQUISITOS
-- Llista quants productes de tipus “Begudes” s'han venut en una determinada localitat.
SELECT COUNT(dp.producto_id) AS bebidas_vendidas, t.ciudad FROM detalle_pedido dp JOIN producto p ON dp.producto_id = p.id JOIN categoria c ON p.categoria_id = c.id JOIN pedido pe ON dp.pedido_id = pe.id JOIN tienda t ON pe.tienda_id = t.id WHERE c.nombre = 'Bebidas' AND t.ciudad = 'Barcelona';

-- Llista quantes comandes ha efectuat un determinat empleat/da.
SELECT e.nombre, e.apellido1, COUNT(entrega.pedido_id) AS comandas_realizadas FROM entrega JOIN empleado e ON entrega.empleado_id = e.id WHERE e.id = '1' GROUP BY e.id;