-- MySQL Script generated by MySQL Workbench
-- Mon Jan 22 12:05:01 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema optica
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema optica
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `optica` DEFAULT CHARACTER SET utf8 ;
USE `optica` ;

-- -----------------------------------------------------
-- Table `optica`.`direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`direccion` (
  `id_direccion` INT NOT NULL AUTO_INCREMENT,
  `calle` VARCHAR(255) NOT NULL,
  `numero` VARCHAR(45) NOT NULL,
  `piso` VARCHAR(45) NOT NULL,
  `puerta` VARCHAR(45) NOT NULL,
  `codigo_postal` VARCHAR(45) NOT NULL,
  `ciudad` VARCHAR(45) NOT NULL,
  `pais` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_direccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`persona` (
  `id_persona` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `id_direccion` INT NOT NULL,
  PRIMARY KEY (`id_persona`),
  INDEX `fk_persona_direccion_idx` (`id_direccion` ASC),
  CONSTRAINT `fk_persona_direccion`
    FOREIGN KEY (`id_direccion`)
    REFERENCES `optica`.`direccion` (`id_direccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`proveedor` (
  `id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `fax` VARCHAR(15) NOT NULL,
  `nif` VARCHAR(15) NOT NULL,
  `id_direccion` INT NOT NULL,
  PRIMARY KEY (`id_proveedor`),
  INDEX `fk_proveedor_direccion1_idx` (`id_direccion` ASC),
  CONSTRAINT `fk_proveedor_direccion`
    FOREIGN KEY (`id_direccion`)
    REFERENCES `optica`.`direccion` (`id_direccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `optica`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`empleado` (
  `id_empleado` INT NOT NULL AUTO_INCREMENT,
  `id_persona` INT NOT NULL,
  PRIMARY KEY (`id_empleado`),
  INDEX `fk_empleado_persona1_idx` (`id_persona` ASC),
  CONSTRAINT `fk_empleado_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `optica`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `fecha_registro` DATE NOT NULL,
  `recomendado_por` INT NOT NULL,
  `id_persona` INT NOT NULL,
  PRIMARY KEY (`id_cliente`),
  INDEX `fk_cliente_persona1_idx` (`id_persona` ASC),
  CONSTRAINT `fk_cliente_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `optica`.`persona` (`id_persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`marca` (
  `id_marca` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  `id_proveedor` INT NOT NULL,
  PRIMARY KEY (`id_marca`),
  INDEX `fk_marca_proveedor1_idx` (`id_proveedor` ASC),
  CONSTRAINT `fk_marca_proveedor`
    FOREIGN KEY (`id_proveedor`)
    REFERENCES `optica`.`proveedor` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`gafa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`gafa` (
  `id_gafa` INT NOT NULL AUTO_INCREMENT,
  `graduacion_cristales` FLOAT NOT NULL,
  `montura` VARCHAR(45) NOT NULL,
  `color_montura` VARCHAR(45) NOT NULL,
  `color_vidrio` VARCHAR(45) NOT NULL,
  `precio` FLOAT NOT NULL,
  `id_marca` INT NOT NULL,
  PRIMARY KEY (`id_gafa`),
  INDEX `fk_gafa_marca1_idx` (`id_marca` ASC),
  CONSTRAINT `fk_gafa_marca`
    FOREIGN KEY (`id_marca`)
    REFERENCES `optica`.`marca` (`id_marca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`venta` (
  `id_venta` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `id_empleado` INT NOT NULL,
  `id_cliente` INT NOT NULL,
  `id_persona` INT NOT NULL,
  PRIMARY KEY (`id_venta`),
  INDEX `fk_venta_empleado1_idx` (`id_empleado` ASC) ,
  INDEX `fk_venta_cliente1_idx` (`id_cliente` ASC) ,
  CONSTRAINT `fk_venta_empleado`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `optica`.`empleado` (`id_empleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_venta_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `optica`.`cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `optica`.`detalle_venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `optica`.`detalle_venta` (
  `id` INT NOT NULL,
  `id_venta` INT NOT NULL,
  `id_gafa` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_venta_has_gafa_gafa1_idx` (`id_gafa` ASC),
  INDEX `fk_venta_has_gafa_venta1_idx` (`id_venta` ASC),
  CONSTRAINT `fk_detalle_venta_venta`
    FOREIGN KEY (`id_venta`)
    REFERENCES `optica`.`venta` (`id_venta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_venta_gafa`
    FOREIGN KEY (`id_gafa`)
    REFERENCES `optica`.`gafa` (`id_gafa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- Insertar datos en tabla

-- direccion
-- (`id_direccion`,`calle`,`numero`,`piso`,`puerta`,`codigo_postal`,`ciudad`,`pais`)
INSERT INTO direccion  VALUES(NULL, 'Av. Libertado', '33', '1','1', '08015', 'Barcelona', 'Espana');
INSERT INTO direccion  VALUES(NULL, 'Av. Paralel', '102', '2','1', '08015', 'Barcelona', 'Espana');
INSERT INTO direccion  VALUES(NULL, 'carrer Carmen', '50', '3','2', '08030', 'Barcelona', 'Espana');
INSERT INTO direccion VALUES(NULL, 'carrer Borrell', '380', '1','2', '08030', 'Barcelona', 'Espana');
INSERT INTO direccion VALUES(NULL, 'Amat', '172', '1','1', '08054', 'Girona', 'Espana');
INSERT INTO direccion VALUES(NULL, 'PeraSoler', '18', '3','1', '08012', 'Girona', 'Espana');

-- persona   (`id_persona`,`nombre`,`apellido1`,`apeliido2`,`email`,`direccion_id_direccion`)
INSERT INTO persona VALUES(NULL, 'Pepito', 'Perez', 'Alcorta','pepito@gmail.com','1');
INSERT INTO persona VALUES(NULL, 'Marco', 'Pip', 'Pera','MarcoP@gmail.com','2');
INSERT INTO persona VALUES(NULL, 'Sara', 'Amor', 'Correa','SaritaA@gmail.com','3');
INSERT INTO persona VALUES(NULL, 'Rosa', 'Meltroso', 'Ara','RosA@gmail.com','6');

-- cliente (`id_cliente`, `fecha _registro`,`recomendado_por`,`persona_id_persona`)
INSERT INTO cliente VALUES(NULL, '2024-01-22', '1','1');
INSERT INTO cliente VALUES(NULL, '2023-08-12', '1','2');

-- proveeedor
INSERT INTO proveedor VALUES(NULL, 'Cimaco', '172-23-45', '172-23-45','31591819P', '4');
INSERT INTO proveedor VALUES(NULL, 'ImporterSRL', '188-89-89', '188-89-89','43591819P', '5');

-- empleado ( `id_empleado`,`persona_id_persona`)
INSERT INTO empleado VALUES(NULL, '3');
INSERT INTO empleado VALUES(NULL, '4');

-- marca ( `id_marca`,`nombre`,`id_proveedor`,`id_direccion`)
INSERT INTO marca VALUES(NULL, 'Ray-Ban','1');
INSERT INTO marca VALUES(NULL, 'Prada','1');
INSERT INTO marca VALUES(NULL, 'ValenCiega','2');

-- gafa
INSERT INTO gafa  VALUES(NULL, '+1.00', 'Acero', 'dorado','Verde', '118.15', '1');
INSERT INTO gafa  VALUES(NULL, '+1.25', 'Titaneo', 'Rosa','Transparente', '225.15', '2');
INSERT INTO gafa  VALUES(NULL, '-2.50', 'Pasta', 'Negro','Negro', '523.50', '3');

-- venta ( `id_venta`,`fecha`,`id_empleado`,`id_cliente` ,`id_persona`,
INSERT INTO venta  VALUES(NULL, '2024-01-22 10:30:00', '1', '1','1');
INSERT INTO venta  VALUES(NULL, '2023-08-12 15:45:00', '1', '1','1');
INSERT INTO venta  VALUES(NULL, '2022-05-05 08:00:00', '1', '1','1');

-- detalle venta (`id`,`id_venta`,`id_gafa`)
INSERT INTO detalle_venta VALUES(1, '1', '1');
INSERT INTO detalle_venta VALUES(2, '1', '2');
INSERT INTO detalle_venta VALUES(3, '2', '3');

-- VERIFICAR CODIGO
-- 1.Listar total de compras del cliente
SELECT c.id_cliente, p.nombre, p.apellido1, p.apellido2, COUNT(v.id_venta) AS total_compras FROM cliente c  JOIN persona p ON c.id_persona = p.id_persona  LEFT JOIN venta v ON c.id_cliente = v.id_cliente  GROUP BY c.id_cliente, p.nombre, p.apellido1, p.apellido2;
-- 2. listar las distintas gafas que ha vendido un empleado durante un a√±o
SELECT e.id_empleado, p.nombre, p.apellido1, p.apellido2,g.id_gafa, g.montura, g.color_montura, g.color_vidrio, g.precio, v.fecha FROM empleado e JOIN persona p ON e.id_persona = p.id_persona JOIN venta v ON e.id_empleado = v.id_empleado JOIN detalle_venta dv ON v.id_venta = dv.id_venta JOIN gafa g ON dv.id_gafa = g.id_gafa WHERE v.fecha BETWEEN '2023-08-12' AND '2024-08-12';
-- 3. lista los diferentes proveedores que han suministrado gafas vendidas con exito por la optica
SELECT DISTINCT p.id_proveedor, p.nombre, p.telefono, d.codigo_postal, d.ciudad, d.pais FROM proveedor p  JOIN direccion d ON p.id_direccion = d.id_direccion JOIN marca m ON p.id_proveedor = m.id_proveedor JOIN gafa g ON m.id_marca = g.id_marca JOIN detalle_venta dv ON g.id_gafa = dv.id_gafa JOIN venta v ON dv.id_venta = v.id_venta;



